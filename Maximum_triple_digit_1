from bisect import bisect_left

def BinarySearch(a,x):
  i = bisect_left(a,x)
  if i:
    return (i-1)
   else:
    return -1
    
class Solution:
  # @param A : list of integers
  # @return an integer
  
  def solve(self,A):
    n= len(A)
    dp = [0]*n
    dp[n-1] = A[n-1]
    
    for i in range(n-2,-1,-1):
      dp[i] = max(dp[i+1],A[i])
     lst = []
     maxe = 0
     lst.append(A[0])
     
     for i in range(1,n-1):
      res = BinarySearch(lst,A[i])
      if(res!=-1):
        if dp[i+1]<=A[i]:
          continue
         ans = lst[res]+A[i]+dp[i+1]
         maxe=max(maxe,ans)
        lst.insert(res+1,A[i])
     return maxe
     return 0
